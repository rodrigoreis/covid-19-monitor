@using System.Text.Json
@model PanelViewModel

@{
    ViewData["Icon"] = "fa-chart-line";
    ViewData["Title"] = "Painel";
}

@section Scripts
{
    <script>
    !(function ($) {
        'use strict'
    
        let presets = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)',
            black: 'rgb(0,0,0)'
        };
        
        let ctxCases = document.getElementById('casos').getContext('2d');
        let ctsDeaths = document.getElementById('obitos').getContext('2d');
        
        let transparentize = (color, opacity) => {
            let alpha = opacity === undefined ? 0.5 : 1 - opacity;
            return Color(color).alpha(alpha).rgbString();
        };   
        
        let chartCases = new Chart(ctxCases, {
            type: 'line',
            data: {
                labels: ['JAN', 'FEV', 'MAR', 'ABR', 'MAI', 'JUN', 'JUL', 'AGO', 'SET', 'OUT', 'NOV', 'DEZ'],
                datasets: [{
                    label: 'Casos',
                    backgroundColor: transparentize(presets.purple),
                    borderColor: presets.purple,
                    fill: true,
                    data: @JsonSerializer.Serialize(Model.CurrentCases),
                    yAxisID: 'y-axis-1'
                },{
                    label: 'Novos Casos',
                    backgroundColor: transparentize(presets.green),
                    borderColor: presets.green,
                    fill: true,
                    data: @JsonSerializer.Serialize(Model.NewCases),
                    yAxisID: 'y-axis-2'
                }]
            },
            options: {
                responsive: true,
                hoverMode: 'index',
                stacked: false,
                title: {
                    display: true,
                    text: 'Casos x Novos Casos'
                },
                scales: {
                    yAxes: [{
                        type: 'linear',
                        display: true,
                        position: 'left',
                        id: 'y-axis-1',
                    }, {
                        type: 'linear',
                        display: true,
                        position: 'right',
                        id: 'y-axis-2',
                        gridLines: {
                            drawOnChartArea: false,
                        },
                    }],
                }
            }
        });

        
        let chartDeaths = new Chart(ctsDeaths, {
            type: 'line',
            data: {
                labels: ['JAN', 'FEV', 'MAR', 'ABR', 'MAI', 'JUN', 'JUL', 'AGO', 'SET', 'OUT', 'NOV', 'DEZ'],
                datasets: [{
                    label: 'Óbitos',
                    backgroundColor: transparentize(presets.black),
                    borderColor: presets.black,
                    fill: true,
                    data: @JsonSerializer.Serialize(Model.CurrentDeaths),
                    yAxisID: 'y-axis-2'
                },{
                    label: 'Novos Óbitos',
                    backgroundColor: transparentize(presets.red),
                    borderColor: presets.red,
                    fill: true,
                    data: @JsonSerializer.Serialize(Model.NewDeaths),
                    yAxisID: 'y-axis-1'
                }]
            },
            options: {
                responsive: true,
                hoverMode: 'index',
                stacked: false,
                title: {
                    display: true,
                    text: 'Óbitos x Novos óbitos'
                },
                scales: {
                    yAxes: [{
                        type: 'linear',
                        display: true,
                        position: 'left',
                        id: 'y-axis-1',
                    }, {
                        type: 'linear',
                        display: true,
                        position: 'right',
                        id: 'y-axis-2',
                        gridLines: {
                            drawOnChartArea: false,
                        },
                    }],
                }
            }
        });        
    
    }(window.jQuery));
    </script>
}


<div class="alert alert-warning alert-dismissible fade show" role="alert">
    <h4 class="alert-heading">
        <i class="fad fa-virus"></i>
        Alerta de COVID-19 na sua região
        <i class="fad fa-virus"></i>
    </h4>
    @Model
    Foi identificado que você está em <strong>Belo Horizonte</strong> fique atento, pois foram notificados <strong>151,000</strong> casos na sua região, sendo <strong>25</strong> no dia de hoje.
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="row">
    <div class="col">
        <div class="card">
            <h5 class="card-header"><i class="fad fa-hospital-user"></i>&nbsp;Casos</h5>
            <div class="card-body">
                <small>fonte: Secretarias Estaduais de Saúde (SES).</small>
                <canvas id="casos" height="150"></canvas>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">Estado</th>
                                <th scope="col">Total de cados </th>
                                <th scope="col">Novos casos (até ontem)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Cases)
                            {
                                <tr>
                                    <td>@item.Estado</td>
                                    <td>@item.Atual</td>
                                    <td>@item.Novos</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col">
        <div class="card">
            <h5 class="card-header"><i class="fad fa-tombstone"></i>&nbsp;Óbitos</h5>
            <div class="card-body">
                <small>fonte: Registros em cartórios e Portal da Transparência do Registro Civil.</small>
                <canvas id="obitos" height="150"></canvas>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">Estado</th>
                                <th scope="col">Total de óbitos</th>
                                <th scope="col">Novos óbitos (até ontem)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Deaths)
                            {
                                <tr>
                                    <td>@item.Estado</td>
                                    <td>@item.Atual</td>
                                    <td>@item.Novos</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>